DIALOGUE SCRIPTING GUIDE

0. UPDATING THE DIALOGUE IN UNITY
   Every time you change this file run 'Tools' > Import Dialogue > Import/Update Dialogue in Unity.

1. BASIC STRUCTURE:
   - Filename (e.g., pavel2.txt) identifies the dialogue
   - Use [MESSAGE HISTORY] to define previous messages
   - Use [LIVE MESSAGES] to define the interactive dialogue
   - Use [ID] for each dialogue segment (e.g., [Pavel_00])
   - {latency: X, timer: Y} sets timing (optional)
   - > for other character's dialogue
   - Numbers (1., 2., etc.) for Vince's response options
   
2. MESSAGE HISTORY:
   Format: content: Message content | author: Vince or Pavel | time: HH:mm
   
3. LIVE MESSAGES (STORYTELLER):
   Format: Number. Brief | Full response | Next dialogue ID
   Example: 1. Yes! (Excited) | Yes, got them and looking forward to listening! | Pavel_01

4. CHARACTER RESPONSES:
   Use < before the response, can be on the next line after an option
   Example: 
   1. Option
      < Response

5. MULTI-LINE TEXT:
   Simply continue on the next line, maintaining indentation

6. MEDIA:
   - Images: [image: filename.jpg] Description
   - Audio: [audio: filename.mp3] Description

7. TIMING (Optional):
   {latency: X, timer: Y} where X and Y are seconds
   Can be placed after segment ID or before a response

8. BRANCHING:
   Use the Next dialogue ID in options to create branches

Remember: 
- Indentation is important for readability but doesn't affect functionality
- Be consistent with your ID naming (e.g., Character_NumberNumber)
- You can have multiple options lead to the same next dialogue

--- START WRITING BELOW THIS LINE ---

[MESSAGE HISTORY]

content: Hey Pavel, got a minute? | author: Vince | time: 12:45
content: Sure, what's up? | author: Pavel | time: 12:47
content: When's your birthday again? | author: Vince | time: 12:49
content: October 12th ... | author: Pavel | time: 12:52
content: As you well know! | author: Pavel | time: 12:53
content: Sorry!!! | author: Vince | time: 12:54

[LIVE MESSAGES]

[Pavel_00]
> Vince,

did you get those files sent over?

Pavel

1. Yes! (Excited) | Yes, got them and looking forward to listening! | Pavel_01
   < Ok then, amazing how you still get excited about the job... 
     don't make me wait too long for this
       
2. Yes (Neutral) | Yup, got them. | Pavel_01
   < Ok. Don't make me wait too long, the sooner we get this song out the better.

3. Nope... | No, nothing yet. Should I have received something? | Pavel_02
   < Claire must have sent you an email. Did you check??

[Pavel_01] {latency: 1.5, timer: 0}
> All right then, talk to you later!

1. Wait! | Actually, before you go, can I ask something? | Pavel_06

[Pavel_02] {latency: 3, timer: 1.5}
> So, did you get it?

1. Sorry... | Damn... sorry about that. I'll check my emails. | Pavel_03
   < Get it together, Vince...

2. Deny fault | Well, that's obviously your fault! You never send stuff via Dropbox. | Pavel_03
   < What? I am super good at dropboxing!

[Pavel_03] {latency: 1, timer: 1.0}
> Anyway, just make sure you check your email. We need to get this done ASAP.

1. Will do. | All right, I'll check it right now. | END
   < Thanks, Vince.

2. What's the rush? | Why is this so urgent? | Pavel_04
   < We have a deadline approaching. Didn't Claire tell you?

[Pavel_04] {latency: 1, timer: 1.0}
1. No, she didn't. | No, she didn't mention anything. | Pavel_05
   < Typical. I'll forward you the details.

2. I might have missed it. | Maybe I missed her email. | Pavel_05
   < Please check your inbox more regularly.

[Pavel_05] {latency: 1, timer: 1.0}
> Just make sure you're on top of it.

1. Will do. | Will do. | END
   < Good.

[Pavel_06] {latency: 1, timer: 1.0}
> Yes?

1. How's the project going? | How's the project going on your end? | END
   < It's progressing. Thanks for asking.

2. Never mind. | No worries, talk later. | END
   < All right.
